user www-data;
worker_processes auto;
pid /var/run/nginx.pid;
error_log  /var/log/nginx/error.log warn;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log  main;
    sendfile on;
    keepalive_timeout  65;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        #this will redirect all http request to https
        return 301 https://$host$request_uri;

        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host $host:$server_port; # to forward the original host requested by the client

        root /var/www/html;
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host $host:$server_port; # to forward the original host requested by the client

        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        index index.html index.htm;
        ssl_ciphers HIGH:!aNULL:!MD5;
        location / {
            proxy_read_timeout 90;
            proxy_pass http://keycloak:8080;
        }
    }
}